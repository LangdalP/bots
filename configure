#!/bin/bash

while [ "$#" -gt 0  ]; do
	case $1 in
		--debug) debug=yes
				;;
		*) echo "Unknown option $1 (skipping)"
			;;
	esac
	shift
done

GCC=`gcc -x c -c -fopenmp /dev/null &>/dev/null  && echo "yes"`
MCC=`mcc -v &> /dev/null && echo "yes"`
ICC=`icc -v &> /dev/null && echo "yes"`
XLC=`xlc -qversion &> /dev/null && echo "yes"`
PGI=`pgcc &> /dev/null && echo "yes"`
SUN=`cc -xopenmp &> /dev/null && echo "yes"`

nc=0

if [ "$GCC" = "yes" ]; then
	let nc=nc+1
	COMPILERS[nc]="gcc"
fi

if [ "$MCC" = "yes" ]; then
	let nc=nc+1
	COMPILERS[nc]="mcc"
fi

if [ "$ICC" = "yes" ]; then
	let nc=nc+1
	COMPILERS[nc]="icc"
fi

if [ "$XLC" = "yes" ]; then
	let nc=nc+1
	COMPILERS[nc]="xlc"
fi

if [ "$PGI" = "yes" ]; then
        let nc=nc+1
        COMPILERS[nc]="pgi"
fi

if [ "$SUN" = "yes" ]; then
        let nc=nc+1        
        COMPILERS[nc]="sunstudio"
fi     

if [ "$nc" -gt "0" ]; then
	echo "The following compilers are recognized: "
	n=1
	for comp in ${COMPILERS[*]}; do
 	 	echo "  $n. $comp"
  		let n=n+1
	done
	echo -n "Choose one to use:"
	read 

	COMPILER=${COMPILERS[$REPLY]}
else
	echo "No suitable compiler was detected"
	echo "An empty make.config will be generated"
fi

if [ "$COMPILER" = "gcc" ]; then
	CC=gcc
	CLINK=$CC
	OMPC="$CC -fopenmp"
	OMPLINK="$CC -fopenmp"
	LABEL=gcc
	[ "$debug" = "yes" ] && DEBUG=-g

	OPT_FLAGS=-O3
	CC_FLAGS=$DEBUG
	OMPC_FLAGS=$DEBUG
	CLINK_FLAGS=$DEBUG
	OMPLINK_FLAGS=$DEBUG
fi

if [ "$COMPILER" = "icc" ]; then
	CC=icc
	CLINK=$CC
	OMPC="$CC -openmp"
	OMPLINK="$CC -openmp"
	LABEL=icc
	[ "$debug" = "yes" ] && DEBUG=-g

	OPT_FLAGS=-O2
	CC_FLAGS=$DEBUG
	OMPC_FLAGS=$DEBUG
	CLINK_FLAGS=$DEBUG
	OMPLINK_FLAGS=$DEBUG
fi


if [ "$COMPILER" = "mcc" ]; then
	CC=mcc
	CLINK=$CC
	OMPC=$CC
	OMPLINK=$CC
	LABEL=mcc
	[ "$debug" = "yes" ] && DEBUG=-g

	OPT_FLAGS=-O3
	CC_FLAGS=$DEBUG
	OMPC_FLAGS=$DEBUG
	CLINK_FLAGS=$DEBUG
	OMPLINK_FLAGS=$DEBUG
fi

if [ "$COMPILER" = "xlc" ]; then
	CC=xlc_r
	CLINK=$CC
	OMPC="$CC -qsmp=omp"
	OMPLINK=$OMPC
	LABEL=xlc
	[ "$debug" = "yes" ] && DEBUG=-g

	OPT_FLAGS=-O3
	CC_FLAGS=$DEBUG
	OMPC_FLAGS=-qthreaded $DEBUG
	CLINK_FLAGS=$DEBUG
	OMPLINK_FLAGS=-qthreaded $DEBUG
fi

if [ "$COMPILER" = "pgi" ]; then
        CC=pgcc
        CLINK=$CC
        OMPC="$CC -mp -Minfo=mp"
        OMPLINK=$OMPC
	LABEL=pgi
        [ "$debug" = "yes" ] && DEBUG=-g

        OPT_FLAGS=-fast
        CC_FLAGS=$DEBUG
        OMPC_FLAGS=$DEBUG
        CLINK_FLAGS=$DEBUG
        OMPLINK_FLAGS=$DEBUG
fi

if [ "$COMPILER" = "sunstudio" ]; then
        CC=cc                         
        CLINK=$CC                     
        OMPC="$CC -xopenmp"           
        OMPLINK=$OMPC                 
	LABEL=suns
        [ "$debug" = "yes" ] && DEBUG=-g

        OPT_FLAGS=-fast
        CC_FLAGS=$DEBUG
        OMPC_FLAGS=$DEBUG
        CLINK_FLAGS=$DEBUG
        OMPLINK_FLAGS=$DEBUG
fi

if [ "$debug" = "yes" ]; then
	LABEL="$LABEL-debug"
fi

[ -f config/make.config ] && replacing_config=true

cat > config/make.config << EOF
#Automatically generated by configure
#compilers and linkers

#config name
LABEL=$LABEL

#compilers
OMPC=$OMPC
CC=$CC
OMPLINK=$OMPLINK
CLINK=$CLINK

#compiler and linker flags

OPT_FLAGS=$OPT_FLAGS

CC_FLAGS=$CC_FLAGS
OMPC_FLAGS=$OMPC_FLAGS

CLINK_FLAGS=$CLINK_FLAGS
OMPLINK_FLAGS=$OMPLINK_FLAGS

EOF

echo "make.config generated"

if [ "$replacing_config" ]; then
	echo "Configuration was changed. Cleaning up"
	make clean
fi 

[ -d bin ] || mkdir -p bin

if make -v | grep GNU &> /dev/null; then
	echo "Run make to compile the benchmarks"
elif gmake -v | grep GNU &> /dev/null; then 
	echo "Run gmake to compile the benchmarks"
else
	echo "I didn't find a GNU-compatible make. You'll need it to compile the benchmarks"
fi

echo "You further refine your configuration in config/make.config"
echo "Use the scripts in the run directory to execute them"

